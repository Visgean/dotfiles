#!/usr/bin/env python3

from PyPDF2 import PdfFileReader
from slugify import slugify
from pathlib import Path

import argparse
import shutil



def get_new_name(filename):
    pdf_toread = PdfFileReader(open(filename, "rb"))
    pdf_info = pdf_toread.getDocumentInfo()

    name = pdf_info['/Title']
    new_name = slugify(name)

    if not new_name:
        return None

    if not new_name.endswith(".pdf"):
        new_name += ".pdf"
    return new_name


info = """
Renames all whacky PDF named files to a bit better form.

Pre-requisites: pip3 install python-slugify PyPDF2 --user

"""

parser = argparse.ArgumentParser(description=info)
parser.add_argument('pdfs',  nargs='+', help='list of filenames to rename')
parser.add_argument('--dry', dest='dry', action='store_true', help='dry-run')

args = parser.parse_args()

for filename in args.pdfs:
    abs_path = Path(filename).resolve()
    base_dir = abs_path.parent

    new  = get_new_name(filename)
    if new is None:
        print(f"Skipping {filename}, metadata empty")
        continue

    print(f"Original {filename}, new name: {new}")

    if args.dry:
        continue

    new_abs_path = base_dir / Path(new)

    if new_abs_path.exists():
        print(f'{new_abs_path} already exists, skipping')
        continue

    shutil.move(filename, new_abs_path)
